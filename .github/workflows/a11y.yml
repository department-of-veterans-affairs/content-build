name: Accessibility Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 14 * * 1-5'

env:
  CHROMEDRIVER_FILEPATH: /usr/local/share/chrome_driver/chromedriver

jobs:
  build:
    name: Build
    runs-on: [self-hosted, asg]
    timeout-minutes: 120
    defaults:
      run:
        working-directory: content-build

    env:
      DRUPAL_ADDRESS: https://cms-content-build-medc0xjkxm4jmpzxl3tfbcs7qcddsivh.ci.cms.va.gov
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem
      CHANNEL_ID: C01RAS1KAQK

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get Slack bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /devops/github_actions_slack_bot_user_token
          env_variable_name: SLACK_BOT_TOKEN

      - name: Notify Slack
        if: ${{ always() }}
        uses: slackapi/slack-github-action@v1.15.0
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          slack-message: 'Starting the daily accessibility scan of `content-build`, with run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>'
          channel-id: ${{ env.CHANNEL_ID }}

      - name: Checkout vagov-content
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/vagov-content
          path: vagov-content

      - name: Checkout content-build
        uses: actions/checkout@v2
        with:
          path: content-build

      - name: Get Node version
        id: get-node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            .cache/yarn
            /github/home/.cache/Cypress
            **/node_modules
          key: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          command: cd content-build && yarn install --frozen-lockfile --prefer-offline --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 7

      - name: Set Drupal address
        run: echo "DRUPAL_ADDRESS=http://internal-dsva-vagov-prod-cms-2000800896.us-gov-west-1.elb.amazonaws.com" >> $GITHUB_ENV

      - name: Build
        run: yarn build --buildtype=vagovprod --asset-source=local --drupal-address=https://cms-content-build-medc0xjkxm4jmpzxl3tfbcs7qcddsivh.ci.cms.va.gov --pull-drupal --drupal-max-parallel-requests=15 --no-drupal-proxy --verbose
        env:
          NODE_ENV: production

      - name: Compress E2E test build
        run: tar -C build/vagovprod -cjf test-build.tar.bz2 .

      - name: Upload E2E test build artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-build.tar.bz2
          path: content-build/test-build.tar.bz2
          retention-days: 1

  a11y:
    name: Accessibility Tests
    needs: build
    timeout-minutes: 120
    runs-on: [self-hosted, asg]
    container:
      image: public.ecr.aws/cypress-io/cypress/browsers:node14.16.0-chrome89-ff77
      options: -u 1001:1001 -v /usr/local/share:/share
    strategy:
      fail-fast: false
      max-parallel: 32
      matrix:
        ci_node_total: [32]
        ci_node_index: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

    env:
      NODE_EXTRA_CA_CERTS: /share/ca-certificates/VA-Internal-S2-RCA1-v1.cer.crt
      CHROMEDRIVER_FILEPATH: /share/chrome_driver/chromedriver

    steps:
      - name: Checkout content-build
        uses: actions/checkout@v2

      - name: Get Node version
        id: get-node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            .cache/yarn
            /github/home/.cache/Cypress
            **/node_modules
          key: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          command: yarn install --frozen-lockfile --prefer-offline --production=false --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 7
        env:
          YARN_CACHE_FOLDER: .cache/yarn

      - name: Download production build artifact
        uses: actions/download-artifact@v2
        with:
          name: test-build.tar.bz2

      - name: Unpack build
        run: |
          mkdir -p build/vagovprod
          tar -C build/vagovprod -xjf /__w/content-build/content-build/test-build.tar.bz2

      - name: Start content-build
        run: node src/platform/testing/e2e/test-server.js --buildtype vagovprod --port=3002 &

      - name: Run Cypress E2E Tests
        run: CYPRESS_STEP=${{ matrix.ci_node_index }} CYPRESS_CONTENT_BUILD_PORT=3002 yarn cy:run --browser chrome --headless --port 3001 --config baseUrl=http://localhost:3002,video=false,testFiles=**/tests/**/*.a11y.spec.js --reporter mochawesome --reporter-options "configFile=config/cypress-reporters.json" --spec "src/platform/site-wide/tests/sitemap/sitemap.a11y.spec.js"

      - name: Rename Mochawesome JSON file
        if: ${{ always() }}
        run: mv mochawesome-report/mochawesome.json mochawesome-report/mochawesome-${{ matrix.ci_node_index }}.json

      - name: Archive Mochawesome test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cypress-mochawesome-test-results
          path: mochawesome-report
          retention-days: 1

  slack:
    name: Notify Slack and upload Mochawesome report
    runs-on: ubuntu-latest
    needs: [build, a11y]
    if: ${{ always() }}
    defaults:
      run:
        working-directory: content-build

    env:
      CHANNEL_ID: C01RAS1KAQK

    steps:
      - name: Checkout content-build
        uses: actions/checkout@v2
        with:
          path: content-build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-gov-west-1'

      - name: Get Slack bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /devops/github_actions_slack_bot_user_token
          env_variable_name: SLACK_BOT_TOKEN

      - name: Accessibility Test Cancellation
        uses: slackapi/slack-github-action@v1.15.0
        if: ${{ needs.a11y.result == 'cancelled' || needs.build.result == 'cancelled' }}
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          slack-message: 'Daily accessibility scan has been canceled on run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>'
          channel-id: ${{ env.CHANNEL_ID }}

      - name: Accessibility Test Failure
        uses: slackapi/slack-github-action@v1.15.0
        if: ${{ needs.a11y.result == 'failure' || needs.build.result == 'failure' }}
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          slack-message: '<!here> Daily accessibility scan has failed on run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>'
          channel-id: ${{ env.CHANNEL_ID }}

      - name: Accessibility Test Success
        uses: slackapi/slack-github-action@v1.15.0
        if: ${{ needs.a11y.result == 'success' }}
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          slack-message: 'Daily accessibility scan has completed successfully on run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>'
          channel-id: ${{ env.CHANNEL_ID }}

      - name: Get Node version
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        id: get-node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Cache dependencies
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            .cache/yarn
            /github/home/.cache/Cypress
            **/node_modules
          key: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ steps.get-node-version.outputs.NODE_VERSION }}-on-demand-runner-cypress-

      - name: Install dependencies
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: nick-invision/retry@v2
        with:
          command: cd content-build && yarn install --frozen-lockfile --prefer-offline --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 7
        env:
          YARN_CACHE_FOLDER: ~/.cache/yarn

      - name: Download Mochawesome test results
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results
          path: content-build/cypress/results/json

      - name: Merge test results into one file
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        run: |
          yarn run cy:report:merge && sed -i -e 's/"message": "AssertionError.*$/"message": "Accessibility violations were detected.",/g' index.json

      - name: Generate HTML report
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        run: yarn run cy:report:generate

      - name: Generate UUID for Mochawesome report
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        run: echo "UUID=$(uuidgen)" >> $GITHUB_ENV

      - name: Rename Mochawesome report file
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        run: |
          cp -r /home/runner/work/content-build/content-build/content-build/public/index.html /home/runner/work/content-build/content-build/content-build/public/${{ env.UUID }}.html

      - name: Get AWS IAM role
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Upload test report to s3
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        run: aws s3 cp /home/runner/work/content-build/content-build/content-build/public/ s3://testing-tools-testing-reports/a11y-reports --acl public-read --region us-gov-west-1 --recursive

      - name: Accessibility Test Report Slack notification
        if: ${{ needs.a11y.result == 'success' || needs.a11y.result == 'failure' }}
        uses: slackapi/slack-github-action@v1.15.0
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          slack-message: 'Daily accessibility report: <https://testing-tools-testing-reports.s3-us-gov-west-1.amazonaws.com/a11y-reports/${{ env.UUID }}.html|${{ github.run_id }}>'
          channel-id: ${{ env.CHANNEL_ID }}
