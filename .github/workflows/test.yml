name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get-latest-tag
        run: echo ::set-output name=LATEST_TAG_VERSION::$(git fetch --all --tags > /dev/null && git tag -l | sort -V --reverse | head -n 1)

      # - name: Get next tag version
      #   id: bump-tag-version
      #   uses: WyriHaximus/github-action-next-semvers@v1
      #   with:
      #     version: ${{ steps.get-latest-tag.outputs.LATEST_TAG_VERSION }}
      #     strict: false

      - name: Get next tag version
        run: |
          current_patch=$(echo ${{ steps.get-latest-tag.outputs.LATEST_TAG_VERSION }} | cut -d'.' -f3)
          echo "new_patch=$(echo $(( $current_patch + 1 )))" >> $GITHUB_ENV

      - name: Ver
        run: echo ${{ env.new_patch }}

      - name: bump
        run: |
          echo "new_patch=$(echo $(( ${{ env.new_patch }} + 1 )))" >> $GITHUB_ENV
          git tag v0.0.${{ env.new_patch }} ${{ needs.set-env.outputs.REF }} && git push origin v0.0.${{ env.new_patch }}

      # - name: Create tag
      #   uses: nick-invision/retry@v2
      #   with:
      #     timeout_seconds: 15
      #     max_attempts: 1
      #     command: git tag v0.0.${{ env.new_patch }} ${{ needs.set-env.outputs.REF }} && git push origin v0.0.${{ env.new_patch }}
      #     new_command_on_retry: |
      #       echo "new_patch=$(echo $(( ${{ env.new_patch }} + 1 )))" >> $GITHUB_ENV
      #       git tag v0.0.${{ env.new_patch }} ${{ needs.set-env.outputs.REF }} && git push origin v0.0.${{ env.new_patch }}
