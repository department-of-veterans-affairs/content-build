name: Manual dev/staging Deploy

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: Deploy a specific commit
        required: true
      deploy_environment:
        type: choice
        description: The environment to deploy to
        required: true
        options:
          - vagovdev
          - vagovstaging
          - both

env:
  DEVOPS_CHANNEL_ID: C37M86Y8G #devops-deploys
  CONTENT_BUILD_CHANNEL_ID: C02VD909V08 #status-content-build

jobs:
  deploy:
    name: Deploy
    runs-on: self-hosted
    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem
      RUN_DEPLOY: ${{ github.event.inputs.deploy_environment == matrix.environment || github.event.inputs.deploy_environment == 'both' }}

    strategy:
      matrix:
        include:
          - environment: vagovdev
            bucket: content.dev.va.gov
          - environment: vagovstaging
            bucket: content.staging.va.gov

    steps:
      - name: Checkout
        if: env.RUN_DEPLOY == 'true'
        uses: actions/checkout@v2

      - name: Configure AWS credentials (1)
        if: env.RUN_DEPLOY == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get role from Parameter Store
        if: env.RUN_DEPLOY == 'true'
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        if: env.RUN_DEPLOY == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Deploy
        if: env.RUN_DEPLOY == 'true'
        run: echo "SUCCESS" 
        # run: ./script/github-actions/deploy.sh -s $SRC -d $DEST -v
        env:
          SRC: s3://vetsgov-website-builds-s3-upload/content-build/${{ github.event.inputs.commit_sha }}/${{ matrix.environment }}.tar.bz2
          DEST: s3://${{ matrix.bucket }}
  
  # notify-failure:
  #   name: Notify Failure
  #   runs-on: ubuntu-latest
  #   if: ${{ failure() || cancelled() }}
  #   needs: deploy

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Notify Slack
  #       uses: ./.github/workflows/slack-notify
  #       continue-on-error: true
  #       with:
  #         attachments: '[{"mrkdwn_in": ["text"], "color": "#D33834", "text": "content-build manual dev/staging deploy failed!: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}>"}]'
  #         channel_id: ${{ env.CONTENT_BUILD_CHANNEL_ID }}
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
