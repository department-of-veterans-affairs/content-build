name: Accessibility Tests - Heading Order

on:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * 1' # 3am ET, Monday

env:
  CHROMEDRIVER_FILEPATH: /usr/local/share/chrome_driver/chromedriver
  BUILD_TYPE: vagovprod
  CHANNEL_ID: C01RAS1KAQK #-daily-accessibility-scan

jobs:
  build:
    name: Build
    runs-on: [self-hosted, asg]
    timeout-minutes: 180
    defaults:
      run:
        working-directory: content-build

    env:
      DRUPAL_ADDRESS: https://cms-content-build-medc0xjkxm4jmpzxl3tfbcs7qcddsivh.ci.cms.va.gov
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem

    steps:
      - name: Checkout vagov-content
        uses: actions/checkout@v3
        with:
          repository: department-of-veterans-affairs/vagov-content
          path: vagov-content

      - name: Checkout content-build
        uses: actions/checkout@v3
        with:
          path: content-build

      - name: Checkout vets-website
        uses: actions/checkout@v3
        with:
          repository: department-of-veterans-affairs/vets-website
          path: vets-website

      - name: Get Node version
        id: get-node-version
        run: echo NODE_VERSION=$(cat .nvmrc) >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Install Yarn
        shell: bash
        run: npm i -g yarn@1.19.1

      - name: Install vets-website dependencies
        uses: nick-invision/retry@v2
        with:
          command: cd vets-website && yarn install --frozen-lockfile --prefer-offline --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 10

      - name: Build vets-website
        run: yarn build --verbose --buildtype=${{ env.BUILD_TYPE }}
        working-directory: vets-website
        timeout-minutes: 30

      - name: Install content-build dependencies
        uses: nick-invision/retry@v2
        with:
          command: cd content-build && yarn install --frozen-lockfile --prefer-offline --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 7

      - name: Set Drupal address
        run: echo "DRUPAL_ADDRESS=https://prod.cms.va.gov" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: set Drupal prod password
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /cms/prod/drupal_api_users/content_build_api/password
          env_variable_name: DRUPAL_PASSWORD

      - name: set Drupal prod username
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /cms/prod/drupal_api_users/content_build_api/username
          env_variable_name: DRUPAL_USERNAME

      - name: Build content-build
        run: yarn build --buildtype=${{ env.BUILD_TYPE }} --asset-source=local --drupal-address=https://prod.cms.va.gov --drupal-user=${{ env.DRUPAL_USERNAME }} --drupal-password="${{ env.DRUPAL_PASSWORD }}" --pull-drupal --drupal-max-parallel-requests=15 --no-drupal-proxy --verbose
        env:
          NODE_ENV: production

      - name: Copy vets-website assets to content-build
        run: |
          cd ..
          cp -arf vets-website/build/${{ env.BUILD_TYPE }}/* content-build/build/${{ env.BUILD_TYPE }}

      - name: Compress E2E test build
        run: tar -C build/${{ env.BUILD_TYPE }} -cjf test-build.tar.bz2 .

      - name: Upload E2E test build artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-build.tar.bz2
          path: content-build/test-build.tar.bz2
          retention-days: 1

      - name: Runner clean up
        run: rm -rf ../content-build

  a11y:
    name: Accessibility Tests
    needs: build
    timeout-minutes: 120
    runs-on: self-hosted
    container:
      image: public.ecr.aws/cypress-io/cypress/browsers:node16.13.2-chrome100-ff98
      options: -u 1001:1001 -v /usr/local/share:/share --user root
    strategy:
      fail-fast: false
      max-parallel: 32
      matrix:
        ci_node_index: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

    env:
      NODE_EXTRA_CA_CERTS: /share/ca-certificates/VA-Internal-S2-RCA1-v1.cer.crt
      CHROMEDRIVER_FILEPATH: /share/chrome_driver/chromedriver

    steps:
      - name: Checkout content-build
        uses: actions/checkout@v3

      - name: Get Node version
        id: get-node-version
        run: echo NODE_VERSION=$(cat .nvmrc) >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          command: yarn install --frozen-lockfile --prefer-offline --production=false --network-concurrency 1
          max_attempts: 3
          timeout_minutes: 7
        env:
          YARN_CACHE_FOLDER: .cache/yarn

      - name: Download production build artifact
        uses: actions/download-artifact@v3
        with:
          name: test-build.tar.bz2

      - name: Unpack build
        run: |
          mkdir -p build/${{ env.BUILD_TYPE }}
          tar -C build/${{ env.BUILD_TYPE }} -xjf /__w/content-build/content-build/test-build.tar.bz2

      - name: Create a11y failures CSV file
        run: touch a11y_failures.csv

      - name: Start content-build
        run: node src/platform/testing/e2e/test-server.js --buildtype ${{ env.BUILD_TYPE }} --port=3002 &

      - name: Run Cypress E2E Tests
        run: CYPRESS_STEP=${{ matrix.ci_node_index }} CYPRESS_CONTENT_BUILD_PORT=3002 CYPRESS_RUN_HEADINGS=true yarn cy:run --browser chrome --headless --port 3001 --config baseUrl=http://localhost:3002,video=false,specPattern=**/tests/**/*.a11y.spec.js --reporter mochawesome --reporter-options "configFile=config/cypress-reporters.json" --spec "src/platform/site-wide/tests/sitemap/sitemap.a11y.spec.js"

      - name: Rename Mochawesome JSON file
        if: ${{ always() }}
        run: mv mochawesome-report/mochawesome.json mochawesome-report/mochawesome-${{ matrix.ci_node_index }}.json

      - name: Rename failures CSV file
        if: ${{ always() }}
        run: mv a11y_failures.csv a11y_failures-${{ matrix.ci_node_index }}.csv

      - name: Archive Mochawesome test results
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: cypress-mochawesome-test-results
          path: mochawesome-report
          retention-days: 1

      - name: Archive failures CSV
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: a11y_failures
          path: a11y_failures-${{ matrix.ci_node_index }}.csv
          retention-days: 30

      - name: Runner clean up
        run: |
          rm -rf build
          rm /__w/content-build/content-build/test-build.tar.bz2

  slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: [build, a11y]
    if: ${{ always() && (needs.a11y.result == 'success' || needs.a11y.result == 'failure' || needs.build.result == 'success' || needs.build.result == 'failure') }}
    defaults:
      run:
        working-directory: content-build

    steps:
      - name: Checkout content-build
        uses: actions/checkout@v3
        with:
          path: content-build

      - name: Download failures CSV
        if: ${{ needs.a11y.result == 'failure' }}
        uses: actions/download-artifact@v3
        with:
          name: a11y_failures
          path: content-build

      - name: Merge failure CSV files
        if: ${{ needs.a11y.result == 'failure' }}
        run: cat *csv > a11y_failures.csv

      - name: Archive merged failures CSV file
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: a11y_failures
          path: content-build/a11y_failures.csv
          retention-days: 30

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-gov-west-1'

      - name: Get Slack bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /devops/github_actions_slack_bot_user_token
          env_variable_name: SLACK_BOT_TOKEN

      - name: Accessibility Test Failure
        uses: slackapi/slack-github-action@v1.18.0
        if: ${{ needs.a11y.result == 'failure' || needs.build.result == 'failure' }}
        continue-on-error: true
        env:
          SSL_CERT_DIR: /etc/ssl/certs
          SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
        with:
          payload: '{"attachments": [{"color": "#FF0800","blocks": [{"type": "section","text": {"type": "mrkdwn","text": "<!here> ATTN: Accessibility heading-order tests have failed on run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>"}}]}]}'
          channel-id: ${{ env.CHANNEL_ID }}
