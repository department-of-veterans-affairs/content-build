version: 2.1

executors:
  circleci-node:
    docker:
      - image: circleci/node:14.15.0
  cypress:
    docker:
      - image: cypress/base:14.15.0
  circleci-e2e:
    docker:
      - image: circleci/openjdk:8-jdk-node-browsers

commands:
  yarn-install-cache:
    description: "Install packages with yarn using saved cache"
    parameters:
      key-prefix:
        type: string
        default: yarn-packages-
    steps:
      - restore_cache:
          keys:
            - << parameters.key-prefix >>{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: << parameters.key-prefix >>{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
jobs:
  validate-content-build:
    executor: circleci-node
    steps:
      - checkout
      - yarn-install-cache
      - run:
          name: Checkout vets-website
          command: cd .. && git clone git@github.com:department-of-veterans-affairs/vets-website.git
      - run:
          name: Install vets-website dependencies
          command: cd ../vets-website && yarn install
      - run:
          name: Where am I
          command: pwd && ls
      - run:
          name: Run validation script
          command: cd ../project && yarn validate-content-build
  lint:
    executor: circleci-node
    steps:
      - checkout
      - yarn-install-cache
      - run: mkdir -p ./test-results
      - run: npx eslint --ext .js --ext .jsx --format junit --output-file ./test-results/eslint.xml .
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results

  unit-test:
    executor: circleci-node
    steps:
      - checkout
      - yarn-install-cache
      - run: mkdir -p ./test-results
      - run:
          command: yarn test:unit --coverage
          environment:
            MOCHA_FILE: ./test-results/test-results.xml
      - run: node ./script/app-coverage-report.js
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results

  contract-test:
    executor: circleci-node
    steps:
      - checkout
      - yarn-install-cache
      - run: mkdir -p ./test-results
      - run: mkdir -p ./pacts
      - run:
          command: yarn test:contract
          environment:
            MOCHA_FILE: ./test-results/test-results.xml
      - run: yarn pact:publish
      - persist_to_workspace:
          root: .
          paths:
            - pacts
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results

  can-i-deploy:
    executor: circleci-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - yarn-install-cache
      - run: yarn pact:can-i-deploy

  security-audit:
    executor: circleci-node
    steps:
      - checkout
      - run: yarn security-check

  # build:
  #   executor: circleci-node
  #   steps:
  #     - checkout
  #     - yarn-install-cache
  #     - run: yarn build

  eslint-check:
    executor: circleci-node
    environment:
      CODE_PATTERN: (/* eslint-disable)|(// eslint-disable)
      OVERALL_REVIEW_COMMENT: >
        # ESLint is disabled

        `vets-website` uses ESLint to help enforce code quality. In most
        situations we would like ESLint to remain enabled.

        ## What you can do

        See if the code can be refactored to avoid disabling ESLint, or wait for
        a VSP review.

      LINE_COMMENT: ESLint disabled here
    steps:
      - checkout
      - yarn-install-cache
      - run:
          name: Try Diff
          command: npm run pr-check

  sentry-check:
    executor: circleci-node
    environment:
      CODE_PATTERN: Sentry\.
      OVERALL_REVIEW_COMMENT: >
        # Sentry call found

        Sentry captures a lot of data, and we want to make sure that we only
        keep information that will be useful for troubleshooting issues.  This
        means that PII should not be recorded.

        ## What you can do

        Review your call to Sentry and see if you can reasonably reduce any
        information that is included, or wait for a VSP review.

      LINE_COMMENT: Sentry found
    steps:
      - checkout
      - yarn-install-cache
      - run:
          name: Check PR for Sentry calls
          command: npm run pr-check

  icon-check:
    executor: circleci-node
    environment:
      CODE_PATTERN: (<i )|(<i$)
      OVERALL_REVIEW_COMMENT: >
        # Icon found

        Icons can be decorative, but sometimes they are used to convey meaning.
        If there are any semantics associated with an icon, those semantics
        should also be conveyed to a screen reader.

        ## What you can do

        Review the markup and see if the icon provides information that isn't
        represented textually, or wait for a VSP review.

      LINE_COMMENT: icon found
    steps:
      - checkout
      - yarn-install-cache
      - run:
          name: Check PR for icon additions
          command: npm run pr-check

  build-environment:
    working_directory: ~/content-build
    executor: circleci-node
    resource_class: xlarge
    steps:
      - checkout
      - yarn-install-cache
      - run:
          name: Checkout vagov-content
          command: cd .. && git clone git@github.com:department-of-veterans-affairs/vagov-content.git
      - run:
          name: Fetch Drupal Cache
          command: yarn fetch-drupal-cache --buildtype=vagovstaging
      - run:
          name: Build site
          command: NODE_ENV=production yarn build --buildtype=vagovstaging
      - persist_to_workspace:
          root: ~/
          paths:
            - content-build/build

  nightwatch:
    working_directory: ~/content-build
    executor: circleci-node
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - yarn-install-cache
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run:
          name: Run npm install again
          command: npm install
      - run:
          name: Run accessibility tests
          command: NODE_ENV=production BABEL_ENV=test yarn nightwatch --buildtype=vagovstaging

workflows:
  version: 2
#   flag-for-manual-review:
#     jobs:
#       - eslint-check:
#           filters:
#             branches:
#               ignore: master
#       - sentry-check:
#           filters:
#             branches:
#               ignore: master
#       - icon-check:
#           filters:
#             branches:
#               ignore: master
  build:
    jobs:
      - build-environment
#   integration:
#     jobs:
#       - build-environment
#       - nightwatch:
#           requires:
#             - build-environment
#   hourly-content-validation:
#     triggers:
#       - schedule:
#           cron: "0 * * * *"
#           filters:
#             branches:
#               only:
#                 - master
#     jobs:
#       - lint
